Opções de load balancer que permite garantir alta disponibilidade
    reability zone = o azure consegue escalonar a vm dentro da mesma regiao, mas em várias zonas
    availibility set = compartilha as vms em mesmo racks para aumentar a disponibilidade

Backend Pool


Exercicios: https://github.com/maiaacademy/imersao-azure-expert

Frontend IP = ip que o cliente irá acessar 

Application Gateway, consigo controlar carga, rescrever o header de uma requisição, entre outras coisas .
Ideal para microserviços

WAF = web Application firewall policy 

Posso associar waf com azure sentinel para capturar logs, e pagar apenas por storage, excelente para montar dashboard e por para a equipe visualizar


Dvwa vulnerable web application = plataforma pra gente poder simular pentest , posso testar com o ativação do waf para proteção 

https://danieldonda.com/2019/09/11/damn-vulnerable-web-application-dvwa/

Ferramenta auxiliar para várias conexões: https://remotedesktopmanager.com/home/thankyou/rdmfreesetup


BEneficios 

Escala vertical, é aumentar recursos 
Escala horizontal é provicionar outras instancias , cluster de forma rápida e automatizada 

Auto scale podemos colocar o mínimo e o máximo conforme demanda de requisições 

Custom Script extensions : São scripts para automatizar alguns provisionamentos de máquinas

Virtual machine scale: é a ferramenta no azure que nos ajuda a configurar o mínimo e o máximo 
Scale out = reduzir 
scale in = aumentar 

Para criar as instancias, basta acessar no portal Virtual machine scale sets. 
é super interessante utilizar essa forma de scalar juntamente com CI e CD para entrega do software


App Web Service: Não precisamos gerenciar a camada de sistema operacional, me preocupo apenas com a aplicação
Dentro dele tem o app service plan, que é como se fosse um armazenamento memória 

Deployment slots = aplicamos uma esteira dentro do appservices (posso ter o stage e production)

Vai chegar um momento em que a aplicação irá precisar de um banco de dados, este banco roda somente em máquinas vpm


------Container 
    - É uma forma de empacotamento do software

Comandos básicos  Client 
docker build 
docker pull 
docker run 

Docker Host

Registry

NO azure temos o componente azure container instances (ACI) junto com container groups
.eastus2.azurecontainer.io

-----kubernetes 
Aks - kubernetes gerenciado
composto por:
    - nodes = instancia 
    - pods = container
    - manifest = .yaml 


----projeto 2 criar aplicação no kubernetes

----Terraform 
    - opensource e estável , gasta pouco dinheiro 

Diferença entre terraform e ansible . O terra provisiona ambiente e o ansible faz gestão ,instalr programas

Packer = gera imagem default para disponibilizar 

O que acha de entregar 30 entregas com o mesmo número de devs ?
A infraestrutura proporciona essa elevação de entrega, garante auditoria , da pra saber quem alterou uma porta , porque mudou ela etc.

gitignore.io - para evitar que as chaves entram no controle de versão 
    ex: A amazon identifica que a chave aparece no codigo e com isso trava tudo bloqueia até o cartao de crédito 

A sacada é manter as chaves no blob do azure


-----Infraestrutura como codigo com ARM 
    - é possível utilziar template e provisionar facilmente com código
é possível usar o link abaixo para gerar diagrama da estrutura 
http://armviz.io/